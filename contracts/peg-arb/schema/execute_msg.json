{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "execute_arb"
      ],
      "properties": {
        "execute_arb": {
          "type": "object",
          "required": [
            "above_peg",
            "details"
          ],
          "properties": {
            "above_peg": {
              "type": "boolean"
            },
            "details": {
              "$ref": "#/definitions/ArbDetails"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "above_peg_callback"
      ],
      "properties": {
        "above_peg_callback": {
          "type": "object",
          "required": [
            "details"
          ],
          "properties": {
            "details": {
              "$ref": "#/definitions/ArbDetails"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "below_peg_callback"
      ],
      "properties": {
        "below_peg_callback": {
          "type": "object",
          "required": [
            "details"
          ],
          "properties": {
            "details": {
              "$ref": "#/definitions/ArbDetails"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_admin"
      ],
      "properties": {
        "set_admin": {
          "type": "object",
          "required": [
            "admin"
          ],
          "properties": {
            "admin": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_pools"
      ],
      "properties": {
        "update_pools": {
          "type": "object",
          "properties": {
            "to_add": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "to_remove": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_vault"
      ],
      "properties": {
        "set_vault": {
          "type": "object",
          "required": [
            "vault"
          ],
          "properties": {
            "vault": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "$ref": "#/definitions/CallbackMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ArbDetails": {
      "type": "object",
      "required": [
        "asset",
        "belief_price",
        "pool_name",
        "slippage"
      ],
      "properties": {
        "asset": {
          "$ref": "#/definitions/Asset"
        },
        "belief_price": {
          "$ref": "#/definitions/Decimal"
        },
        "pool_name": {
          "type": "string"
        },
        "slippage": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "info"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        }
      }
    },
    "AssetInfo": {
      "description": "AssetInfo contract_addr is usually passed from the cw20 hook so we can trust the contract_addr is properly validated.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "object",
              "required": [
                "contract_addr"
              ],
              "properties": {
                "contract_addr": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "CallbackMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "after_successful_trade_callback"
          ],
          "properties": {
            "after_successful_trade_callback": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
